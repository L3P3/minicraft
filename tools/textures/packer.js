import {PNG} from 'pngjs';
import {optimizeZopfliPngSync} from 'node-zopflipng';
import {
	readFileSync,
	writeFileSync,
} from 'fs';

const input_meta = JSON.parse(readFileSync('./blocks.json', 'utf8'));
console.log('metafile read, tiles:', input_meta.tiles.length);

const input_resolution_log2 = Math.log2(input_meta.resolution);
if (input_resolution_log2 % 1)
	throw new Error('resolution must be in 1, 2, 4, 8...');

const input_data = readFileSync('blocks.png');
console.log('input read, size:', input_data.length);

const input_png = PNG.sync.read(input_data);
console.log('input parsed, resolution:', input_png.width, input_png.height);

if (input_png.width !== input_meta.resolution)
	throw new Error('wrong input width');
if (input_png.height !== input_meta.resolution * input_meta.tiles.length)
	throw new Error('wrong input height');

console.log('input size matches metafile');

const output_png = new PNG({
	width: input_meta.resolution * input_meta.resolution,
	height: input_meta.tiles.length,
});

output_png.data = input_png.data;

const transformed_data = PNG.sync.write(output_png);
console.log('transformed png generated, size:', transformed_data.length);

const transformed_data_optimized = optimizeZopfliPngSync(transformed_data, {
	lossyTransparent: true,
	lossy8bit: true,
	iterations: 1e3,
});
console.log('transformed png optimized, size:', transformed_data_optimized.length);

// writeFileSync('blocks.t.png', transformed_data_optimized);

const transformed_data_text = transformed_data_optimized.toString('base64');

let output_text = `// This file was automatically generated by packer.js

`;

let tiles_index = 0;
for (const tile of input_meta.tiles) {
	output_text += 'export const TILE_' + tile.toUpperCase() + ' = ' + tiles_index +  ';\n';
	++tiles_index;
}

output_text += `
export const TILES_RESOLUTION = ${input_meta.resolution};
export const TILES_RESOLUTION_LOG2 = ${input_resolution_log2};
export const TILES_DATA = '${transformed_data_text}';
`;

writeFileSync('textures.js', output_text, 'utf8');
console.log('textures.js written, data size:', transformed_data_text.length);
